// Code generated by protoc-gen-go. DO NOT EDIT.
// source: compute/v1/vpc.proto

// vpc Service
//
// vpc Service API consists of a single service which returns
// a message.

package compute

import (
	context "context"
	fmt "fmt"
	v1 "github.com/didiyun/didiyun-go-sdk/base/v1"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListVpcRequest struct {
	Header               *v1.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Start                int32      `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Limit                int32      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListVpcRequest) Reset()         { *m = ListVpcRequest{} }
func (m *ListVpcRequest) String() string { return proto.CompactTextString(m) }
func (*ListVpcRequest) ProtoMessage()    {}
func (*ListVpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{0}
}

func (m *ListVpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVpcRequest.Unmarshal(m, b)
}
func (m *ListVpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVpcRequest.Marshal(b, m, deterministic)
}
func (m *ListVpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVpcRequest.Merge(m, src)
}
func (m *ListVpcRequest) XXX_Size() int {
	return xxx_messageInfo_ListVpcRequest.Size(m)
}
func (m *ListVpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVpcRequest proto.InternalMessageInfo

func (m *ListVpcRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ListVpcRequest) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ListVpcRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListVpcResponse struct {
	Error                *v1.Error  `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*VpcInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListVpcResponse) Reset()         { *m = ListVpcResponse{} }
func (m *ListVpcResponse) String() string { return proto.CompactTextString(m) }
func (*ListVpcResponse) ProtoMessage()    {}
func (*ListVpcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{1}
}

func (m *ListVpcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVpcResponse.Unmarshal(m, b)
}
func (m *ListVpcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVpcResponse.Marshal(b, m, deterministic)
}
func (m *ListVpcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVpcResponse.Merge(m, src)
}
func (m *ListVpcResponse) XXX_Size() int {
	return xxx_messageInfo_ListVpcResponse.Size(m)
}
func (m *ListVpcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVpcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVpcResponse proto.InternalMessageInfo

func (m *ListVpcResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListVpcResponse) GetData() []*VpcInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetVpcByUuidRequest struct {
	Header               *v1.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	VpcUuid              string     `protobuf:"bytes,2,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetVpcByUuidRequest) Reset()         { *m = GetVpcByUuidRequest{} }
func (m *GetVpcByUuidRequest) String() string { return proto.CompactTextString(m) }
func (*GetVpcByUuidRequest) ProtoMessage()    {}
func (*GetVpcByUuidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{2}
}

func (m *GetVpcByUuidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVpcByUuidRequest.Unmarshal(m, b)
}
func (m *GetVpcByUuidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVpcByUuidRequest.Marshal(b, m, deterministic)
}
func (m *GetVpcByUuidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVpcByUuidRequest.Merge(m, src)
}
func (m *GetVpcByUuidRequest) XXX_Size() int {
	return xxx_messageInfo_GetVpcByUuidRequest.Size(m)
}
func (m *GetVpcByUuidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVpcByUuidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVpcByUuidRequest proto.InternalMessageInfo

func (m *GetVpcByUuidRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetVpcByUuidRequest) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

type GetVpcByUuidResponse struct {
	Error                *v1.Error  `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*VpcInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetVpcByUuidResponse) Reset()         { *m = GetVpcByUuidResponse{} }
func (m *GetVpcByUuidResponse) String() string { return proto.CompactTextString(m) }
func (*GetVpcByUuidResponse) ProtoMessage()    {}
func (*GetVpcByUuidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{3}
}

func (m *GetVpcByUuidResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVpcByUuidResponse.Unmarshal(m, b)
}
func (m *GetVpcByUuidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVpcByUuidResponse.Marshal(b, m, deterministic)
}
func (m *GetVpcByUuidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVpcByUuidResponse.Merge(m, src)
}
func (m *GetVpcByUuidResponse) XXX_Size() int {
	return xxx_messageInfo_GetVpcByUuidResponse.Size(m)
}
func (m *GetVpcByUuidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVpcByUuidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVpcByUuidResponse proto.InternalMessageInfo

func (m *GetVpcByUuidResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetVpcByUuidResponse) GetData() []*VpcInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetVpcTotalCntRequest struct {
	Header               *v1.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetVpcTotalCntRequest) Reset()         { *m = GetVpcTotalCntRequest{} }
func (m *GetVpcTotalCntRequest) String() string { return proto.CompactTextString(m) }
func (*GetVpcTotalCntRequest) ProtoMessage()    {}
func (*GetVpcTotalCntRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{4}
}

func (m *GetVpcTotalCntRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVpcTotalCntRequest.Unmarshal(m, b)
}
func (m *GetVpcTotalCntRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVpcTotalCntRequest.Marshal(b, m, deterministic)
}
func (m *GetVpcTotalCntRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVpcTotalCntRequest.Merge(m, src)
}
func (m *GetVpcTotalCntRequest) XXX_Size() int {
	return xxx_messageInfo_GetVpcTotalCntRequest.Size(m)
}
func (m *GetVpcTotalCntRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVpcTotalCntRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVpcTotalCntRequest proto.InternalMessageInfo

func (m *GetVpcTotalCntRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type GetVpcTotalCntResponse struct {
	Error                *v1.Error       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*TotalCntInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetVpcTotalCntResponse) Reset()         { *m = GetVpcTotalCntResponse{} }
func (m *GetVpcTotalCntResponse) String() string { return proto.CompactTextString(m) }
func (*GetVpcTotalCntResponse) ProtoMessage()    {}
func (*GetVpcTotalCntResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{5}
}

func (m *GetVpcTotalCntResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVpcTotalCntResponse.Unmarshal(m, b)
}
func (m *GetVpcTotalCntResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVpcTotalCntResponse.Marshal(b, m, deterministic)
}
func (m *GetVpcTotalCntResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVpcTotalCntResponse.Merge(m, src)
}
func (m *GetVpcTotalCntResponse) XXX_Size() int {
	return xxx_messageInfo_GetVpcTotalCntResponse.Size(m)
}
func (m *GetVpcTotalCntResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVpcTotalCntResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVpcTotalCntResponse proto.InternalMessageInfo

func (m *GetVpcTotalCntResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetVpcTotalCntResponse) GetData() []*TotalCntInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateSubnetInput struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cidr                 string   `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	ZoneId               string   `protobuf:"bytes,3,opt,name=zoneId,proto3" json:"zoneId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSubnetInput) Reset()         { *m = CreateSubnetInput{} }
func (m *CreateSubnetInput) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetInput) ProtoMessage()    {}
func (*CreateSubnetInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{6}
}

func (m *CreateSubnetInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetInput.Unmarshal(m, b)
}
func (m *CreateSubnetInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetInput.Marshal(b, m, deterministic)
}
func (m *CreateSubnetInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetInput.Merge(m, src)
}
func (m *CreateSubnetInput) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetInput.Size(m)
}
func (m *CreateSubnetInput) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetInput.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetInput proto.InternalMessageInfo

func (m *CreateSubnetInput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateSubnetInput) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *CreateSubnetInput) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

type CreateVpcRequest struct {
	Header               *v1.Header           `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cidr                 string               `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Subnet               []*CreateSubnetInput `protobuf:"bytes,4,rep,name=subnet,proto3" json:"subnet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateVpcRequest) Reset()         { *m = CreateVpcRequest{} }
func (m *CreateVpcRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVpcRequest) ProtoMessage()    {}
func (*CreateVpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{7}
}

func (m *CreateVpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVpcRequest.Unmarshal(m, b)
}
func (m *CreateVpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVpcRequest.Marshal(b, m, deterministic)
}
func (m *CreateVpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVpcRequest.Merge(m, src)
}
func (m *CreateVpcRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVpcRequest.Size(m)
}
func (m *CreateVpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVpcRequest proto.InternalMessageInfo

func (m *CreateVpcRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateVpcRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVpcRequest) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *CreateVpcRequest) GetSubnet() []*CreateSubnetInput {
	if m != nil {
		return m.Subnet
	}
	return nil
}

type CreateVpcResponse struct {
	Error                *v1.Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*v1.JobInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateVpcResponse) Reset()         { *m = CreateVpcResponse{} }
func (m *CreateVpcResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVpcResponse) ProtoMessage()    {}
func (*CreateVpcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{8}
}

func (m *CreateVpcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVpcResponse.Unmarshal(m, b)
}
func (m *CreateVpcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVpcResponse.Marshal(b, m, deterministic)
}
func (m *CreateVpcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVpcResponse.Merge(m, src)
}
func (m *CreateVpcResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVpcResponse.Size(m)
}
func (m *CreateVpcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVpcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVpcResponse proto.InternalMessageInfo

func (m *CreateVpcResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CreateVpcResponse) GetData() []*v1.JobInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteVpcRequest struct {
	Header               *v1.Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Vpc                  []*DeleteVpcRequest_Input `protobuf:"bytes,2,rep,name=vpc,proto3" json:"vpc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeleteVpcRequest) Reset()         { *m = DeleteVpcRequest{} }
func (m *DeleteVpcRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVpcRequest) ProtoMessage()    {}
func (*DeleteVpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{9}
}

func (m *DeleteVpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVpcRequest.Unmarshal(m, b)
}
func (m *DeleteVpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVpcRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVpcRequest.Merge(m, src)
}
func (m *DeleteVpcRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVpcRequest.Size(m)
}
func (m *DeleteVpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVpcRequest proto.InternalMessageInfo

func (m *DeleteVpcRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteVpcRequest) GetVpc() []*DeleteVpcRequest_Input {
	if m != nil {
		return m.Vpc
	}
	return nil
}

type DeleteVpcRequest_Input struct {
	VpcUuid              string   `protobuf:"bytes,1,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVpcRequest_Input) Reset()         { *m = DeleteVpcRequest_Input{} }
func (m *DeleteVpcRequest_Input) String() string { return proto.CompactTextString(m) }
func (*DeleteVpcRequest_Input) ProtoMessage()    {}
func (*DeleteVpcRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{9, 0}
}

func (m *DeleteVpcRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVpcRequest_Input.Unmarshal(m, b)
}
func (m *DeleteVpcRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVpcRequest_Input.Marshal(b, m, deterministic)
}
func (m *DeleteVpcRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVpcRequest_Input.Merge(m, src)
}
func (m *DeleteVpcRequest_Input) XXX_Size() int {
	return xxx_messageInfo_DeleteVpcRequest_Input.Size(m)
}
func (m *DeleteVpcRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVpcRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVpcRequest_Input proto.InternalMessageInfo

func (m *DeleteVpcRequest_Input) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

type DeleteVpcResponse struct {
	Error                *v1.Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*v1.JobInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteVpcResponse) Reset()         { *m = DeleteVpcResponse{} }
func (m *DeleteVpcResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVpcResponse) ProtoMessage()    {}
func (*DeleteVpcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{10}
}

func (m *DeleteVpcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVpcResponse.Unmarshal(m, b)
}
func (m *DeleteVpcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVpcResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVpcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVpcResponse.Merge(m, src)
}
func (m *DeleteVpcResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVpcResponse.Size(m)
}
func (m *DeleteVpcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVpcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVpcResponse proto.InternalMessageInfo

func (m *DeleteVpcResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *DeleteVpcResponse) GetData() []*v1.JobInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type ChangeVpcNameRequest struct {
	Header               *v1.Header                    `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Vpc                  []*ChangeVpcNameRequest_Input `protobuf:"bytes,2,rep,name=vpc,proto3" json:"vpc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ChangeVpcNameRequest) Reset()         { *m = ChangeVpcNameRequest{} }
func (m *ChangeVpcNameRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeVpcNameRequest) ProtoMessage()    {}
func (*ChangeVpcNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{11}
}

func (m *ChangeVpcNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeVpcNameRequest.Unmarshal(m, b)
}
func (m *ChangeVpcNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeVpcNameRequest.Marshal(b, m, deterministic)
}
func (m *ChangeVpcNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeVpcNameRequest.Merge(m, src)
}
func (m *ChangeVpcNameRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeVpcNameRequest.Size(m)
}
func (m *ChangeVpcNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeVpcNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeVpcNameRequest proto.InternalMessageInfo

func (m *ChangeVpcNameRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ChangeVpcNameRequest) GetVpc() []*ChangeVpcNameRequest_Input {
	if m != nil {
		return m.Vpc
	}
	return nil
}

type ChangeVpcNameRequest_Input struct {
	VpcUuid              string   `protobuf:"bytes,1,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeVpcNameRequest_Input) Reset()         { *m = ChangeVpcNameRequest_Input{} }
func (m *ChangeVpcNameRequest_Input) String() string { return proto.CompactTextString(m) }
func (*ChangeVpcNameRequest_Input) ProtoMessage()    {}
func (*ChangeVpcNameRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{11, 0}
}

func (m *ChangeVpcNameRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeVpcNameRequest_Input.Unmarshal(m, b)
}
func (m *ChangeVpcNameRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeVpcNameRequest_Input.Marshal(b, m, deterministic)
}
func (m *ChangeVpcNameRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeVpcNameRequest_Input.Merge(m, src)
}
func (m *ChangeVpcNameRequest_Input) XXX_Size() int {
	return xxx_messageInfo_ChangeVpcNameRequest_Input.Size(m)
}
func (m *ChangeVpcNameRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeVpcNameRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeVpcNameRequest_Input proto.InternalMessageInfo

func (m *ChangeVpcNameRequest_Input) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

func (m *ChangeVpcNameRequest_Input) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChangeVpcNameResponse struct {
	Error                *v1.Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*v1.JobInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ChangeVpcNameResponse) Reset()         { *m = ChangeVpcNameResponse{} }
func (m *ChangeVpcNameResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeVpcNameResponse) ProtoMessage()    {}
func (*ChangeVpcNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{12}
}

func (m *ChangeVpcNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeVpcNameResponse.Unmarshal(m, b)
}
func (m *ChangeVpcNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeVpcNameResponse.Marshal(b, m, deterministic)
}
func (m *ChangeVpcNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeVpcNameResponse.Merge(m, src)
}
func (m *ChangeVpcNameResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeVpcNameResponse.Size(m)
}
func (m *ChangeVpcNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeVpcNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeVpcNameResponse proto.InternalMessageInfo

func (m *ChangeVpcNameResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ChangeVpcNameResponse) GetData() []*v1.JobInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListVpcAvailableCidrRequest struct {
	Header               *v1.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListVpcAvailableCidrRequest) Reset()         { *m = ListVpcAvailableCidrRequest{} }
func (m *ListVpcAvailableCidrRequest) String() string { return proto.CompactTextString(m) }
func (*ListVpcAvailableCidrRequest) ProtoMessage()    {}
func (*ListVpcAvailableCidrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{13}
}

func (m *ListVpcAvailableCidrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVpcAvailableCidrRequest.Unmarshal(m, b)
}
func (m *ListVpcAvailableCidrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVpcAvailableCidrRequest.Marshal(b, m, deterministic)
}
func (m *ListVpcAvailableCidrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVpcAvailableCidrRequest.Merge(m, src)
}
func (m *ListVpcAvailableCidrRequest) XXX_Size() int {
	return xxx_messageInfo_ListVpcAvailableCidrRequest.Size(m)
}
func (m *ListVpcAvailableCidrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVpcAvailableCidrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVpcAvailableCidrRequest proto.InternalMessageInfo

func (m *ListVpcAvailableCidrRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type VpcAvailableCidr struct {
	AvailableCidr        []string `protobuf:"bytes,1,rep,name=availableCidr,proto3" json:"availableCidr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VpcAvailableCidr) Reset()         { *m = VpcAvailableCidr{} }
func (m *VpcAvailableCidr) String() string { return proto.CompactTextString(m) }
func (*VpcAvailableCidr) ProtoMessage()    {}
func (*VpcAvailableCidr) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{14}
}

func (m *VpcAvailableCidr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VpcAvailableCidr.Unmarshal(m, b)
}
func (m *VpcAvailableCidr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VpcAvailableCidr.Marshal(b, m, deterministic)
}
func (m *VpcAvailableCidr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VpcAvailableCidr.Merge(m, src)
}
func (m *VpcAvailableCidr) XXX_Size() int {
	return xxx_messageInfo_VpcAvailableCidr.Size(m)
}
func (m *VpcAvailableCidr) XXX_DiscardUnknown() {
	xxx_messageInfo_VpcAvailableCidr.DiscardUnknown(m)
}

var xxx_messageInfo_VpcAvailableCidr proto.InternalMessageInfo

func (m *VpcAvailableCidr) GetAvailableCidr() []string {
	if m != nil {
		return m.AvailableCidr
	}
	return nil
}

type ListVpcAvailableCidrResponse struct {
	Error                *v1.Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*VpcAvailableCidr `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListVpcAvailableCidrResponse) Reset()         { *m = ListVpcAvailableCidrResponse{} }
func (m *ListVpcAvailableCidrResponse) String() string { return proto.CompactTextString(m) }
func (*ListVpcAvailableCidrResponse) ProtoMessage()    {}
func (*ListVpcAvailableCidrResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{15}
}

func (m *ListVpcAvailableCidrResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVpcAvailableCidrResponse.Unmarshal(m, b)
}
func (m *ListVpcAvailableCidrResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVpcAvailableCidrResponse.Marshal(b, m, deterministic)
}
func (m *ListVpcAvailableCidrResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVpcAvailableCidrResponse.Merge(m, src)
}
func (m *ListVpcAvailableCidrResponse) XXX_Size() int {
	return xxx_messageInfo_ListVpcAvailableCidrResponse.Size(m)
}
func (m *ListVpcAvailableCidrResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVpcAvailableCidrResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVpcAvailableCidrResponse proto.InternalMessageInfo

func (m *ListVpcAvailableCidrResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListVpcAvailableCidrResponse) GetData() []*VpcAvailableCidr {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListSubnetRequest struct {
	Header               *v1.Header           `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Start                int32                `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Limit                int32                `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Simplify             bool                 `protobuf:"varint,4,opt,name=simplify,proto3" json:"simplify,omitempty"`
	Condition            *ListSubnetCondition `protobuf:"bytes,5,opt,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListSubnetRequest) Reset()         { *m = ListSubnetRequest{} }
func (m *ListSubnetRequest) String() string { return proto.CompactTextString(m) }
func (*ListSubnetRequest) ProtoMessage()    {}
func (*ListSubnetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{16}
}

func (m *ListSubnetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSubnetRequest.Unmarshal(m, b)
}
func (m *ListSubnetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSubnetRequest.Marshal(b, m, deterministic)
}
func (m *ListSubnetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSubnetRequest.Merge(m, src)
}
func (m *ListSubnetRequest) XXX_Size() int {
	return xxx_messageInfo_ListSubnetRequest.Size(m)
}
func (m *ListSubnetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSubnetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSubnetRequest proto.InternalMessageInfo

func (m *ListSubnetRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ListSubnetRequest) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ListSubnetRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListSubnetRequest) GetSimplify() bool {
	if m != nil {
		return m.Simplify
	}
	return false
}

func (m *ListSubnetRequest) GetCondition() *ListSubnetCondition {
	if m != nil {
		return m.Condition
	}
	return nil
}

type ListSubnetCondition struct {
	VpcUuid              string   `protobuf:"bytes,1,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSubnetCondition) Reset()         { *m = ListSubnetCondition{} }
func (m *ListSubnetCondition) String() string { return proto.CompactTextString(m) }
func (*ListSubnetCondition) ProtoMessage()    {}
func (*ListSubnetCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{17}
}

func (m *ListSubnetCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSubnetCondition.Unmarshal(m, b)
}
func (m *ListSubnetCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSubnetCondition.Marshal(b, m, deterministic)
}
func (m *ListSubnetCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSubnetCondition.Merge(m, src)
}
func (m *ListSubnetCondition) XXX_Size() int {
	return xxx_messageInfo_ListSubnetCondition.Size(m)
}
func (m *ListSubnetCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSubnetCondition.DiscardUnknown(m)
}

var xxx_messageInfo_ListSubnetCondition proto.InternalMessageInfo

func (m *ListSubnetCondition) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

type ListSubnetResponse struct {
	Error                *v1.Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*SubnetInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListSubnetResponse) Reset()         { *m = ListSubnetResponse{} }
func (m *ListSubnetResponse) String() string { return proto.CompactTextString(m) }
func (*ListSubnetResponse) ProtoMessage()    {}
func (*ListSubnetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{18}
}

func (m *ListSubnetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSubnetResponse.Unmarshal(m, b)
}
func (m *ListSubnetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSubnetResponse.Marshal(b, m, deterministic)
}
func (m *ListSubnetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSubnetResponse.Merge(m, src)
}
func (m *ListSubnetResponse) XXX_Size() int {
	return xxx_messageInfo_ListSubnetResponse.Size(m)
}
func (m *ListSubnetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSubnetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSubnetResponse proto.InternalMessageInfo

func (m *ListSubnetResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListSubnetResponse) GetData() []*SubnetInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetSubnetByUuidRequest struct {
	Header               *v1.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	VpcUuid              string     `protobuf:"bytes,2,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	SubnetUuid           string     `protobuf:"bytes,3,opt,name=subnetUuid,proto3" json:"subnetUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetSubnetByUuidRequest) Reset()         { *m = GetSubnetByUuidRequest{} }
func (m *GetSubnetByUuidRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubnetByUuidRequest) ProtoMessage()    {}
func (*GetSubnetByUuidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{19}
}

func (m *GetSubnetByUuidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubnetByUuidRequest.Unmarshal(m, b)
}
func (m *GetSubnetByUuidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubnetByUuidRequest.Marshal(b, m, deterministic)
}
func (m *GetSubnetByUuidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubnetByUuidRequest.Merge(m, src)
}
func (m *GetSubnetByUuidRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubnetByUuidRequest.Size(m)
}
func (m *GetSubnetByUuidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubnetByUuidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubnetByUuidRequest proto.InternalMessageInfo

func (m *GetSubnetByUuidRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetSubnetByUuidRequest) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

func (m *GetSubnetByUuidRequest) GetSubnetUuid() string {
	if m != nil {
		return m.SubnetUuid
	}
	return ""
}

type GetSubnetByUuidResponse struct {
	Error                *v1.Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*SubnetInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetSubnetByUuidResponse) Reset()         { *m = GetSubnetByUuidResponse{} }
func (m *GetSubnetByUuidResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubnetByUuidResponse) ProtoMessage()    {}
func (*GetSubnetByUuidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{20}
}

func (m *GetSubnetByUuidResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubnetByUuidResponse.Unmarshal(m, b)
}
func (m *GetSubnetByUuidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubnetByUuidResponse.Marshal(b, m, deterministic)
}
func (m *GetSubnetByUuidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubnetByUuidResponse.Merge(m, src)
}
func (m *GetSubnetByUuidResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubnetByUuidResponse.Size(m)
}
func (m *GetSubnetByUuidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubnetByUuidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubnetByUuidResponse proto.InternalMessageInfo

func (m *GetSubnetByUuidResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetSubnetByUuidResponse) GetData() []*SubnetInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetSubnetTotalCntRequest struct {
	Header               *v1.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	VpcUuid              string     `protobuf:"bytes,2,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetSubnetTotalCntRequest) Reset()         { *m = GetSubnetTotalCntRequest{} }
func (m *GetSubnetTotalCntRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubnetTotalCntRequest) ProtoMessage()    {}
func (*GetSubnetTotalCntRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{21}
}

func (m *GetSubnetTotalCntRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubnetTotalCntRequest.Unmarshal(m, b)
}
func (m *GetSubnetTotalCntRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubnetTotalCntRequest.Marshal(b, m, deterministic)
}
func (m *GetSubnetTotalCntRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubnetTotalCntRequest.Merge(m, src)
}
func (m *GetSubnetTotalCntRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubnetTotalCntRequest.Size(m)
}
func (m *GetSubnetTotalCntRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubnetTotalCntRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubnetTotalCntRequest proto.InternalMessageInfo

func (m *GetSubnetTotalCntRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetSubnetTotalCntRequest) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

type GetSubnetTotalCntResponse struct {
	Error                *v1.Error       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*TotalCntInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetSubnetTotalCntResponse) Reset()         { *m = GetSubnetTotalCntResponse{} }
func (m *GetSubnetTotalCntResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubnetTotalCntResponse) ProtoMessage()    {}
func (*GetSubnetTotalCntResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{22}
}

func (m *GetSubnetTotalCntResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubnetTotalCntResponse.Unmarshal(m, b)
}
func (m *GetSubnetTotalCntResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubnetTotalCntResponse.Marshal(b, m, deterministic)
}
func (m *GetSubnetTotalCntResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubnetTotalCntResponse.Merge(m, src)
}
func (m *GetSubnetTotalCntResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubnetTotalCntResponse.Size(m)
}
func (m *GetSubnetTotalCntResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubnetTotalCntResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubnetTotalCntResponse proto.InternalMessageInfo

func (m *GetSubnetTotalCntResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetSubnetTotalCntResponse) GetData() []*TotalCntInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateSubnetRequest struct {
	Header               *v1.Header           `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	VpcUuid              string               `protobuf:"bytes,2,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	Subnet               []*CreateSubnetInput `protobuf:"bytes,3,rep,name=subnet,proto3" json:"subnet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateSubnetRequest) Reset()         { *m = CreateSubnetRequest{} }
func (m *CreateSubnetRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetRequest) ProtoMessage()    {}
func (*CreateSubnetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{23}
}

func (m *CreateSubnetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetRequest.Unmarshal(m, b)
}
func (m *CreateSubnetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetRequest.Marshal(b, m, deterministic)
}
func (m *CreateSubnetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetRequest.Merge(m, src)
}
func (m *CreateSubnetRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetRequest.Size(m)
}
func (m *CreateSubnetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetRequest proto.InternalMessageInfo

func (m *CreateSubnetRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateSubnetRequest) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

func (m *CreateSubnetRequest) GetSubnet() []*CreateSubnetInput {
	if m != nil {
		return m.Subnet
	}
	return nil
}

type CreateSubnetResponse struct {
	Error                *v1.Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*v1.JobInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateSubnetResponse) Reset()         { *m = CreateSubnetResponse{} }
func (m *CreateSubnetResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetResponse) ProtoMessage()    {}
func (*CreateSubnetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{24}
}

func (m *CreateSubnetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetResponse.Unmarshal(m, b)
}
func (m *CreateSubnetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetResponse.Marshal(b, m, deterministic)
}
func (m *CreateSubnetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetResponse.Merge(m, src)
}
func (m *CreateSubnetResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetResponse.Size(m)
}
func (m *CreateSubnetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetResponse proto.InternalMessageInfo

func (m *CreateSubnetResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CreateSubnetResponse) GetData() []*v1.JobInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteSubnetRequest struct {
	Header               *v1.Header                   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	VpcUuid              string                       `protobuf:"bytes,2,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	Subnet               []*DeleteSubnetRequest_Input `protobuf:"bytes,3,rep,name=subnet,proto3" json:"subnet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DeleteSubnetRequest) Reset()         { *m = DeleteSubnetRequest{} }
func (m *DeleteSubnetRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetRequest) ProtoMessage()    {}
func (*DeleteSubnetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{25}
}

func (m *DeleteSubnetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetRequest.Unmarshal(m, b)
}
func (m *DeleteSubnetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetRequest.Merge(m, src)
}
func (m *DeleteSubnetRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetRequest.Size(m)
}
func (m *DeleteSubnetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetRequest proto.InternalMessageInfo

func (m *DeleteSubnetRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteSubnetRequest) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

func (m *DeleteSubnetRequest) GetSubnet() []*DeleteSubnetRequest_Input {
	if m != nil {
		return m.Subnet
	}
	return nil
}

type DeleteSubnetRequest_Input struct {
	SubnetUuid           string   `protobuf:"bytes,1,opt,name=subnetUuid,proto3" json:"subnetUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubnetRequest_Input) Reset()         { *m = DeleteSubnetRequest_Input{} }
func (m *DeleteSubnetRequest_Input) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetRequest_Input) ProtoMessage()    {}
func (*DeleteSubnetRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{25, 0}
}

func (m *DeleteSubnetRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetRequest_Input.Unmarshal(m, b)
}
func (m *DeleteSubnetRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetRequest_Input.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetRequest_Input.Merge(m, src)
}
func (m *DeleteSubnetRequest_Input) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetRequest_Input.Size(m)
}
func (m *DeleteSubnetRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetRequest_Input proto.InternalMessageInfo

func (m *DeleteSubnetRequest_Input) GetSubnetUuid() string {
	if m != nil {
		return m.SubnetUuid
	}
	return ""
}

type DeleteSubnetResponse struct {
	Error                *v1.Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*v1.JobInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteSubnetResponse) Reset()         { *m = DeleteSubnetResponse{} }
func (m *DeleteSubnetResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetResponse) ProtoMessage()    {}
func (*DeleteSubnetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{26}
}

func (m *DeleteSubnetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetResponse.Unmarshal(m, b)
}
func (m *DeleteSubnetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetResponse.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetResponse.Merge(m, src)
}
func (m *DeleteSubnetResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetResponse.Size(m)
}
func (m *DeleteSubnetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetResponse proto.InternalMessageInfo

func (m *DeleteSubnetResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *DeleteSubnetResponse) GetData() []*v1.JobInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type ChangeSubnetNameRequest struct {
	Header               *v1.Header                       `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	VpcUuid              string                           `protobuf:"bytes,2,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	Subnet               []*ChangeSubnetNameRequest_Input `protobuf:"bytes,3,rep,name=subnet,proto3" json:"subnet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ChangeSubnetNameRequest) Reset()         { *m = ChangeSubnetNameRequest{} }
func (m *ChangeSubnetNameRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeSubnetNameRequest) ProtoMessage()    {}
func (*ChangeSubnetNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{27}
}

func (m *ChangeSubnetNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeSubnetNameRequest.Unmarshal(m, b)
}
func (m *ChangeSubnetNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeSubnetNameRequest.Marshal(b, m, deterministic)
}
func (m *ChangeSubnetNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeSubnetNameRequest.Merge(m, src)
}
func (m *ChangeSubnetNameRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeSubnetNameRequest.Size(m)
}
func (m *ChangeSubnetNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeSubnetNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeSubnetNameRequest proto.InternalMessageInfo

func (m *ChangeSubnetNameRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ChangeSubnetNameRequest) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

func (m *ChangeSubnetNameRequest) GetSubnet() []*ChangeSubnetNameRequest_Input {
	if m != nil {
		return m.Subnet
	}
	return nil
}

type ChangeSubnetNameRequest_Input struct {
	SubnetUuid           string   `protobuf:"bytes,1,opt,name=subnetUuid,proto3" json:"subnetUuid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeSubnetNameRequest_Input) Reset()         { *m = ChangeSubnetNameRequest_Input{} }
func (m *ChangeSubnetNameRequest_Input) String() string { return proto.CompactTextString(m) }
func (*ChangeSubnetNameRequest_Input) ProtoMessage()    {}
func (*ChangeSubnetNameRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{27, 0}
}

func (m *ChangeSubnetNameRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeSubnetNameRequest_Input.Unmarshal(m, b)
}
func (m *ChangeSubnetNameRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeSubnetNameRequest_Input.Marshal(b, m, deterministic)
}
func (m *ChangeSubnetNameRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeSubnetNameRequest_Input.Merge(m, src)
}
func (m *ChangeSubnetNameRequest_Input) XXX_Size() int {
	return xxx_messageInfo_ChangeSubnetNameRequest_Input.Size(m)
}
func (m *ChangeSubnetNameRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeSubnetNameRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeSubnetNameRequest_Input proto.InternalMessageInfo

func (m *ChangeSubnetNameRequest_Input) GetSubnetUuid() string {
	if m != nil {
		return m.SubnetUuid
	}
	return ""
}

func (m *ChangeSubnetNameRequest_Input) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChangeSubnetNameResponse struct {
	Error                *v1.Error     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*v1.JobInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ChangeSubnetNameResponse) Reset()         { *m = ChangeSubnetNameResponse{} }
func (m *ChangeSubnetNameResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeSubnetNameResponse) ProtoMessage()    {}
func (*ChangeSubnetNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{28}
}

func (m *ChangeSubnetNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeSubnetNameResponse.Unmarshal(m, b)
}
func (m *ChangeSubnetNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeSubnetNameResponse.Marshal(b, m, deterministic)
}
func (m *ChangeSubnetNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeSubnetNameResponse.Merge(m, src)
}
func (m *ChangeSubnetNameResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeSubnetNameResponse.Size(m)
}
func (m *ChangeSubnetNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeSubnetNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeSubnetNameResponse proto.InternalMessageInfo

func (m *ChangeSubnetNameResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ChangeSubnetNameResponse) GetData() []*v1.JobInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type CheckSubnetCidrOverlapRequest struct {
	Header               *v1.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	VpcUuid              string     `protobuf:"bytes,2,opt,name=vpcUuid,proto3" json:"vpcUuid,omitempty"`
	Cidr                 string     `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CheckSubnetCidrOverlapRequest) Reset()         { *m = CheckSubnetCidrOverlapRequest{} }
func (m *CheckSubnetCidrOverlapRequest) String() string { return proto.CompactTextString(m) }
func (*CheckSubnetCidrOverlapRequest) ProtoMessage()    {}
func (*CheckSubnetCidrOverlapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{29}
}

func (m *CheckSubnetCidrOverlapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckSubnetCidrOverlapRequest.Unmarshal(m, b)
}
func (m *CheckSubnetCidrOverlapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckSubnetCidrOverlapRequest.Marshal(b, m, deterministic)
}
func (m *CheckSubnetCidrOverlapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckSubnetCidrOverlapRequest.Merge(m, src)
}
func (m *CheckSubnetCidrOverlapRequest) XXX_Size() int {
	return xxx_messageInfo_CheckSubnetCidrOverlapRequest.Size(m)
}
func (m *CheckSubnetCidrOverlapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckSubnetCidrOverlapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckSubnetCidrOverlapRequest proto.InternalMessageInfo

func (m *CheckSubnetCidrOverlapRequest) GetHeader() *v1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CheckSubnetCidrOverlapRequest) GetVpcUuid() string {
	if m != nil {
		return m.VpcUuid
	}
	return ""
}

func (m *CheckSubnetCidrOverlapRequest) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

type CheckSubnetCidrOverlapResponse struct {
	Error                *v1.Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*IsOverlapOutput `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CheckSubnetCidrOverlapResponse) Reset()         { *m = CheckSubnetCidrOverlapResponse{} }
func (m *CheckSubnetCidrOverlapResponse) String() string { return proto.CompactTextString(m) }
func (*CheckSubnetCidrOverlapResponse) ProtoMessage()    {}
func (*CheckSubnetCidrOverlapResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{30}
}

func (m *CheckSubnetCidrOverlapResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckSubnetCidrOverlapResponse.Unmarshal(m, b)
}
func (m *CheckSubnetCidrOverlapResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckSubnetCidrOverlapResponse.Marshal(b, m, deterministic)
}
func (m *CheckSubnetCidrOverlapResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckSubnetCidrOverlapResponse.Merge(m, src)
}
func (m *CheckSubnetCidrOverlapResponse) XXX_Size() int {
	return xxx_messageInfo_CheckSubnetCidrOverlapResponse.Size(m)
}
func (m *CheckSubnetCidrOverlapResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckSubnetCidrOverlapResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckSubnetCidrOverlapResponse proto.InternalMessageInfo

func (m *CheckSubnetCidrOverlapResponse) GetError() *v1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CheckSubnetCidrOverlapResponse) GetData() []*IsOverlapOutput {
	if m != nil {
		return m.Data
	}
	return nil
}

type IsOverlapOutput struct {
	IsOverLap            bool     `protobuf:"varint,1,opt,name=isOverLap,proto3" json:"isOverLap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsOverlapOutput) Reset()         { *m = IsOverlapOutput{} }
func (m *IsOverlapOutput) String() string { return proto.CompactTextString(m) }
func (*IsOverlapOutput) ProtoMessage()    {}
func (*IsOverlapOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f908e3cf0b76b8, []int{31}
}

func (m *IsOverlapOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsOverlapOutput.Unmarshal(m, b)
}
func (m *IsOverlapOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsOverlapOutput.Marshal(b, m, deterministic)
}
func (m *IsOverlapOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsOverlapOutput.Merge(m, src)
}
func (m *IsOverlapOutput) XXX_Size() int {
	return xxx_messageInfo_IsOverlapOutput.Size(m)
}
func (m *IsOverlapOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_IsOverlapOutput.DiscardUnknown(m)
}

var xxx_messageInfo_IsOverlapOutput proto.InternalMessageInfo

func (m *IsOverlapOutput) GetIsOverLap() bool {
	if m != nil {
		return m.IsOverLap
	}
	return false
}

func init() {
	proto.RegisterType((*ListVpcRequest)(nil), "didi.cloud.compute.v1.ListVpcRequest")
	proto.RegisterType((*ListVpcResponse)(nil), "didi.cloud.compute.v1.ListVpcResponse")
	proto.RegisterType((*GetVpcByUuidRequest)(nil), "didi.cloud.compute.v1.GetVpcByUuidRequest")
	proto.RegisterType((*GetVpcByUuidResponse)(nil), "didi.cloud.compute.v1.GetVpcByUuidResponse")
	proto.RegisterType((*GetVpcTotalCntRequest)(nil), "didi.cloud.compute.v1.GetVpcTotalCntRequest")
	proto.RegisterType((*GetVpcTotalCntResponse)(nil), "didi.cloud.compute.v1.GetVpcTotalCntResponse")
	proto.RegisterType((*CreateSubnetInput)(nil), "didi.cloud.compute.v1.CreateSubnetInput")
	proto.RegisterType((*CreateVpcRequest)(nil), "didi.cloud.compute.v1.CreateVpcRequest")
	proto.RegisterType((*CreateVpcResponse)(nil), "didi.cloud.compute.v1.CreateVpcResponse")
	proto.RegisterType((*DeleteVpcRequest)(nil), "didi.cloud.compute.v1.DeleteVpcRequest")
	proto.RegisterType((*DeleteVpcRequest_Input)(nil), "didi.cloud.compute.v1.DeleteVpcRequest.Input")
	proto.RegisterType((*DeleteVpcResponse)(nil), "didi.cloud.compute.v1.DeleteVpcResponse")
	proto.RegisterType((*ChangeVpcNameRequest)(nil), "didi.cloud.compute.v1.ChangeVpcNameRequest")
	proto.RegisterType((*ChangeVpcNameRequest_Input)(nil), "didi.cloud.compute.v1.ChangeVpcNameRequest.Input")
	proto.RegisterType((*ChangeVpcNameResponse)(nil), "didi.cloud.compute.v1.ChangeVpcNameResponse")
	proto.RegisterType((*ListVpcAvailableCidrRequest)(nil), "didi.cloud.compute.v1.ListVpcAvailableCidrRequest")
	proto.RegisterType((*VpcAvailableCidr)(nil), "didi.cloud.compute.v1.VpcAvailableCidr")
	proto.RegisterType((*ListVpcAvailableCidrResponse)(nil), "didi.cloud.compute.v1.ListVpcAvailableCidrResponse")
	proto.RegisterType((*ListSubnetRequest)(nil), "didi.cloud.compute.v1.ListSubnetRequest")
	proto.RegisterType((*ListSubnetCondition)(nil), "didi.cloud.compute.v1.ListSubnetCondition")
	proto.RegisterType((*ListSubnetResponse)(nil), "didi.cloud.compute.v1.ListSubnetResponse")
	proto.RegisterType((*GetSubnetByUuidRequest)(nil), "didi.cloud.compute.v1.GetSubnetByUuidRequest")
	proto.RegisterType((*GetSubnetByUuidResponse)(nil), "didi.cloud.compute.v1.GetSubnetByUuidResponse")
	proto.RegisterType((*GetSubnetTotalCntRequest)(nil), "didi.cloud.compute.v1.GetSubnetTotalCntRequest")
	proto.RegisterType((*GetSubnetTotalCntResponse)(nil), "didi.cloud.compute.v1.GetSubnetTotalCntResponse")
	proto.RegisterType((*CreateSubnetRequest)(nil), "didi.cloud.compute.v1.CreateSubnetRequest")
	proto.RegisterType((*CreateSubnetResponse)(nil), "didi.cloud.compute.v1.CreateSubnetResponse")
	proto.RegisterType((*DeleteSubnetRequest)(nil), "didi.cloud.compute.v1.DeleteSubnetRequest")
	proto.RegisterType((*DeleteSubnetRequest_Input)(nil), "didi.cloud.compute.v1.DeleteSubnetRequest.Input")
	proto.RegisterType((*DeleteSubnetResponse)(nil), "didi.cloud.compute.v1.DeleteSubnetResponse")
	proto.RegisterType((*ChangeSubnetNameRequest)(nil), "didi.cloud.compute.v1.ChangeSubnetNameRequest")
	proto.RegisterType((*ChangeSubnetNameRequest_Input)(nil), "didi.cloud.compute.v1.ChangeSubnetNameRequest.Input")
	proto.RegisterType((*ChangeSubnetNameResponse)(nil), "didi.cloud.compute.v1.ChangeSubnetNameResponse")
	proto.RegisterType((*CheckSubnetCidrOverlapRequest)(nil), "didi.cloud.compute.v1.CheckSubnetCidrOverlapRequest")
	proto.RegisterType((*CheckSubnetCidrOverlapResponse)(nil), "didi.cloud.compute.v1.CheckSubnetCidrOverlapResponse")
	proto.RegisterType((*IsOverlapOutput)(nil), "didi.cloud.compute.v1.IsOverlapOutput")
}

func init() {
	proto.RegisterFile("compute/v1/vpc.proto", fileDescriptor_a9f908e3cf0b76b8)
}

var fileDescriptor_a9f908e3cf0b76b8 = []byte{
	// 1380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x99, 0x4d, 0x73, 0xdb, 0x44,
	0x18, 0xc7, 0x67, 0xe3, 0x24, 0xad, 0x9f, 0xbe, 0x25, 0x1b, 0x27, 0x71, 0xd5, 0x34, 0xe3, 0x6e,
	0xda, 0xc6, 0x7d, 0x89, 0x54, 0xbb, 0xcd, 0xc0, 0xd0, 0x03, 0x50, 0x97, 0xa1, 0x81, 0x0e, 0x05,
	0x15, 0x72, 0x60, 0x7a, 0x91, 0x25, 0xd5, 0xd1, 0xc4, 0x96, 0x84, 0x25, 0x99, 0x06, 0x7a, 0x69,
	0x07, 0xca, 0xa5, 0x5c, 0xa0, 0xc3, 0x07, 0xe0, 0xe5, 0xd2, 0x13, 0x1f, 0x80, 0x33, 0x07, 0x66,
	0x38, 0x31, 0xc3, 0x0c, 0x77, 0x3e, 0x01, 0x27, 0x8e, 0x8c, 0x76, 0xd7, 0xb6, 0x24, 0xaf, 0x64,
	0x27, 0x26, 0x3e, 0xd9, 0xda, 0x7d, 0x76, 0x9f, 0xdf, 0xfe, 0x57, 0xbb, 0xfb, 0x5f, 0x1b, 0x0a,
	0xba, 0xd3, 0x72, 0x03, 0xdf, 0x54, 0x3a, 0x15, 0xa5, 0xe3, 0xea, 0xb2, 0xdb, 0x76, 0x7c, 0x07,
	0x2f, 0x1a, 0x96, 0x61, 0xc9, 0x7a, 0xd3, 0x09, 0x0c, 0x99, 0x07, 0xc8, 0x9d, 0x8a, 0x84, 0xeb,
	0x9a, 0x47, 0x23, 0xc3, 0x4f, 0x16, 0x2a, 0x2d, 0x47, 0x3a, 0xd0, 0x9d, 0x56, 0xcb, 0xb1, 0x79,
	0xc5, 0x4a, 0xc3, 0x71, 0x1a, 0x4d, 0x53, 0xd1, 0x5c, 0x4b, 0xd1, 0x6c, 0xdb, 0xf1, 0x35, 0xdf,
	0x72, 0x6c, 0x8f, 0xd5, 0x12, 0x17, 0x4e, 0xde, 0xb5, 0x3c, 0x7f, 0xdb, 0xd5, 0x55, 0xf3, 0x93,
	0xc0, 0xf4, 0x7c, 0x5c, 0x85, 0xd9, 0x1d, 0x53, 0x33, 0xcc, 0x76, 0x11, 0x95, 0x50, 0xf9, 0x58,
	0x55, 0x92, 0x23, 0x10, 0x34, 0x61, 0xa7, 0x22, 0xdf, 0xa1, 0x11, 0x2a, 0x8f, 0xc4, 0x05, 0x98,
	0xf1, 0x7c, 0xad, 0xed, 0x17, 0xa7, 0x4a, 0xa8, 0x3c, 0xa3, 0xb2, 0x87, 0xb0, 0xb4, 0x69, 0xb5,
	0x2c, 0xbf, 0x98, 0x63, 0xa5, 0xf4, 0x81, 0x74, 0xe0, 0x54, 0x2f, 0xa3, 0xe7, 0x3a, 0xb6, 0x67,
	0x62, 0x05, 0x66, 0xcc, 0x76, 0xdb, 0xe9, 0x66, 0x3c, 0x2d, 0xca, 0xf8, 0x56, 0x18, 0xa0, 0xb2,
	0x38, 0x5c, 0x85, 0x69, 0x43, 0xf3, 0xb5, 0xe2, 0x54, 0x29, 0x57, 0x3e, 0x56, 0x5d, 0x95, 0x85,
	0x32, 0xc9, 0xdb, 0xae, 0xbe, 0x65, 0x3f, 0x74, 0x54, 0x1a, 0x4b, 0x74, 0x58, 0x78, 0xdb, 0x0c,
	0xd3, 0xde, 0xda, 0xfb, 0x28, 0xb0, 0x8c, 0x71, 0x86, 0x5b, 0x84, 0x23, 0x1d, 0x57, 0x0f, 0x7b,
	0xa1, 0x03, 0xce, 0xab, 0xdd, 0x47, 0xf2, 0x39, 0x14, 0xe2, 0x49, 0x26, 0x39, 0xc2, 0x77, 0x61,
	0x91, 0x25, 0xff, 0xd0, 0xf1, 0xb5, 0x66, 0xcd, 0xf6, 0xc7, 0x18, 0x23, 0x79, 0x8a, 0x60, 0x29,
	0xd9, 0xdb, 0x41, 0x07, 0xf3, 0x4a, 0x6c, 0x30, 0x6b, 0x29, 0x83, 0xe9, 0xe6, 0x89, 0x8c, 0xe8,
	0x3e, 0xcc, 0xd7, 0xda, 0xa6, 0xe6, 0x9b, 0xf7, 0x83, 0xba, 0x6d, 0xfa, 0x5b, 0xb6, 0x1b, 0xf8,
	0x18, 0xc3, 0xb4, 0xad, 0xb5, 0x4c, 0x9a, 0x3d, 0xaf, 0xd2, 0xef, 0x61, 0x99, 0x6e, 0x19, 0x6d,
	0x3e, 0x1d, 0xf4, 0x3b, 0x5e, 0x82, 0xd9, 0xcf, 0x1c, 0xdb, 0xdc, 0x32, 0xe8, 0xfb, 0x97, 0x57,
	0xf9, 0x13, 0xf9, 0x19, 0xc1, 0x1c, 0xeb, 0x75, 0xcc, 0xb7, 0xbe, 0x0b, 0x32, 0x25, 0x00, 0xc9,
	0x45, 0x40, 0xde, 0x80, 0x59, 0x8f, 0xf2, 0x17, 0xa7, 0xa9, 0x00, 0xe5, 0x14, 0x01, 0x06, 0x86,
	0xaa, 0xf2, 0x76, 0x24, 0xe8, 0xea, 0x30, 0xd6, 0xaa, 0x51, 0x62, 0xd3, 0x70, 0x46, 0x14, 0xff,
	0x8e, 0x53, 0x8f, 0xc8, 0xff, 0x12, 0xc1, 0xdc, 0x6d, 0xb3, 0x69, 0x8e, 0xad, 0xd4, 0xeb, 0x90,
	0xeb, 0xb8, 0x3a, 0x4f, 0xbc, 0x91, 0x32, 0xfc, 0x64, 0x26, 0x99, 0x69, 0x10, 0xb6, 0x94, 0xce,
	0xc1, 0x0c, 0x9b, 0xfc, 0xc8, 0xd2, 0x43, 0xf1, 0xa5, 0x17, 0xc0, 0x7c, 0xa4, 0x87, 0x89, 0x69,
	0xf4, 0x2b, 0x82, 0x42, 0x6d, 0x47, 0xb3, 0x1b, 0x61, 0xde, 0xf7, 0xb4, 0x96, 0x39, 0x8e, 0x4e,
	0xb5, 0xa8, 0x4e, 0x95, 0xb4, 0xd7, 0x44, 0x90, 0x2d, 0xaa, 0xd5, 0xe6, 0x50, 0xad, 0x44, 0x6f,
	0x2e, 0xd9, 0x83, 0xc5, 0x44, 0xcf, 0x13, 0xd3, 0xf0, 0x03, 0x38, 0xc3, 0x8f, 0x84, 0x37, 0x3b,
	0x9a, 0xd5, 0xd4, 0xea, 0x4d, 0xb3, 0x66, 0x19, 0xed, 0x71, 0xb6, 0xaf, 0x57, 0x61, 0x2e, 0xd9,
	0x1d, 0x3e, 0x0f, 0x27, 0xb4, 0x68, 0x41, 0x11, 0x95, 0x72, 0xe5, 0xbc, 0x1a, 0x2f, 0x24, 0xcf,
	0x11, 0xac, 0x88, 0x69, 0x0e, 0xaa, 0xc7, 0xcd, 0x98, 0x1e, 0xeb, 0xe9, 0x7b, 0x79, 0x3c, 0x1f,
	0xd3, 0xe6, 0x2f, 0x04, 0xf3, 0x21, 0x0e, 0xdb, 0x16, 0x26, 0x74, 0x48, 0x63, 0x09, 0x8e, 0x7a,
	0x56, 0xcb, 0x6d, 0x5a, 0x0f, 0xf7, 0x8a, 0xd3, 0x25, 0x54, 0x3e, 0xaa, 0xf6, 0x9e, 0xf1, 0x1d,
	0xc8, 0xeb, 0x8e, 0x6d, 0x58, 0xa1, 0x8d, 0x28, 0xce, 0xd0, 0xf4, 0x97, 0x53, 0xc6, 0xd4, 0x07,
	0xaf, 0x75, 0x5b, 0xa8, 0xfd, 0xc6, 0x44, 0x81, 0x05, 0x41, 0x44, 0xc6, 0x1a, 0x7f, 0x0c, 0x38,
	0xaa, 0xc5, 0x41, 0x27, 0x64, 0x33, 0x36, 0x21, 0xe7, 0x52, 0xe0, 0xbb, 0x1b, 0x71, 0xef, 0x35,
	0x7d, 0xc6, 0x8e, 0x44, 0x56, 0x7e, 0x88, 0x2e, 0x02, 0xaf, 0x02, 0xb0, 0x8d, 0x9f, 0x56, 0xb2,
	0xa3, 0x24, 0x52, 0x42, 0x9e, 0x20, 0x58, 0x1e, 0x00, 0x99, 0xb0, 0x18, 0x3b, 0x50, 0xec, 0x21,
	0xfc, 0x0f, 0x7e, 0x23, 0xc3, 0x53, 0x7d, 0x89, 0xe0, 0xb4, 0x20, 0xd5, 0xc4, 0xcd, 0xc8, 0x4f,
	0x08, 0x16, 0xa2, 0x47, 0xf4, 0xe1, 0xcc, 0x7d, 0xdf, 0x2c, 0xe4, 0x0e, 0x68, 0x16, 0x1e, 0x41,
	0x21, 0x8e, 0x39, 0xb1, 0x7d, 0xfc, 0x4f, 0x04, 0x0b, 0xec, 0x0c, 0x3e, 0x4c, 0x85, 0xee, 0x24,
	0x14, 0xba, 0x96, 0xe9, 0x27, 0x62, 0x24, 0x72, 0x4c, 0x29, 0x69, 0xbd, 0x7b, 0x52, 0xc6, 0x17,
	0x1c, 0x1a, 0x58, 0x70, 0x8f, 0xa0, 0x10, 0xef, 0x6d, 0x62, 0x92, 0xfe, 0x83, 0x60, 0x99, 0x1d,
	0xcb, 0x2c, 0xf5, 0xb8, 0x0e, 0x23, 0x5d, 0xd6, 0xbb, 0x09, 0x59, 0x6f, 0x64, 0xda, 0x8f, 0x01,
	0x9a, 0x84, 0xb4, 0x37, 0x47, 0x94, 0x56, 0x68, 0x45, 0x1e, 0x43, 0x71, 0x30, 0xcb, 0xc4, 0x24,
	0x7f, 0x82, 0xe0, 0x6c, 0x6d, 0xc7, 0xd4, 0x77, 0xf9, 0xb9, 0x64, 0x19, 0xed, 0x7b, 0x1d, 0xb3,
	0xdd, 0xd4, 0xdc, 0xc3, 0x11, 0x5e, 0x70, 0x65, 0x20, 0x5f, 0x23, 0x58, 0x4d, 0x63, 0x38, 0xa8,
	0x10, 0xaf, 0xc5, 0x84, 0xb8, 0x98, 0x32, 0xbd, 0x5b, 0x1e, 0x4f, 0x74, 0x2f, 0xf0, 0xc3, 0x09,
	0x65, 0x9a, 0x28, 0x70, 0x2a, 0x51, 0x81, 0x57, 0x20, 0x6f, 0xd1, 0xa2, 0xbb, 0x9a, 0x4b, 0x19,
	0x8e, 0xaa, 0xfd, 0x82, 0xea, 0xef, 0x73, 0x90, 0xdb, 0x76, 0x75, 0xfc, 0x18, 0x8e, 0x70, 0x33,
	0x85, 0x2f, 0x64, 0x98, 0x84, 0xbe, 0xeb, 0x97, 0x2e, 0x0e, 0x0b, 0x63, 0xe3, 0x27, 0xe4, 0xe9,
	0x1f, 0x7f, 0x7f, 0x3b, 0xb5, 0x42, 0x24, 0xc3, 0xa2, 0xb1, 0x8a, 0xa5, 0xd8, 0xa6, 0xff, 0xa9,
	0xd3, 0xde, 0x55, 0x3a, 0xae, 0xae, 0x34, 0x2d, 0xcf, 0xc7, 0xcf, 0x10, 0x1c, 0x8f, 0xde, 0xc7,
	0x71, 0x9a, 0x51, 0x11, 0xfc, 0x32, 0x20, 0x5d, 0x19, 0x29, 0x96, 0xd3, 0x9c, 0xa5, 0x34, 0xcb,
	0x78, 0x51, 0x48, 0x83, 0xbf, 0x41, 0x70, 0x32, 0x7e, 0x9b, 0xc6, 0x57, 0x33, 0xbb, 0x4f, 0x1c,
	0xa9, 0xd2, 0xc6, 0x88, 0xd1, 0x1c, 0x67, 0x8d, 0xe2, 0x9c, 0x25, 0x67, 0xc4, 0xe2, 0xe8, 0x4e,
	0x60, 0xfb, 0xf8, 0x0b, 0x04, 0xf9, 0xde, 0xb5, 0x12, 0xaf, 0x67, 0x1e, 0x34, 0x91, 0x09, 0x2a,
	0x0f, 0x0f, 0xe4, 0x14, 0xe7, 0x29, 0xc5, 0x2a, 0x59, 0x11, 0x53, 0x68, 0x9e, 0x67, 0x35, 0x6c,
	0x8a, 0xd1, 0xbb, 0xb9, 0xa5, 0x62, 0x24, 0x6f, 0x87, 0xa9, 0x18, 0x03, 0x97, 0xc0, 0x61, 0x18,
	0x06, 0x6d, 0x80, 0x5f, 0x20, 0x38, 0x11, 0xbb, 0x00, 0xe1, 0x2b, 0xfb, 0xb8, 0x80, 0x49, 0x57,
	0x47, 0x0b, 0xe6, 0x48, 0x65, 0x8a, 0x44, 0x48, 0x29, 0x65, 0x7e, 0x68, 0x23, 0x0a, 0xf1, 0x03,
	0x82, 0x82, 0xe8, 0x3a, 0x82, 0xab, 0xd9, 0xeb, 0x44, 0x74, 0x93, 0x92, 0xae, 0xef, 0xab, 0x4d,
	0x7c, 0xa1, 0xe1, 0x94, 0x85, 0x46, 0x7f, 0xe2, 0x78, 0x8e, 0x00, 0xfa, 0xce, 0x1c, 0x97, 0x87,
	0xde, 0x07, 0xba, 0x44, 0x97, 0x46, 0x88, 0xe4, 0x1c, 0x97, 0x28, 0xc7, 0x1a, 0x39, 0x27, 0xe6,
	0x60, 0x67, 0x0a, 0x5b, 0xf7, 0xdf, 0x21, 0x38, 0x95, 0x30, 0xc8, 0x38, 0x63, 0x05, 0x09, 0x1c,
	0xbd, 0x24, 0x8f, 0x1a, 0x1e, 0x7f, 0xc9, 0xf0, 0x4a, 0x16, 0x1d, 0xfe, 0x1e, 0xc1, 0xfc, 0x80,
	0x97, 0xc5, 0xca, 0xb0, 0x5c, 0xc9, 0xdd, 0xe0, 0xda, 0xe8, 0x0d, 0x38, 0xde, 0x65, 0x8a, 0x77,
	0x9e, 0x90, 0x4c, 0xf1, 0xd8, 0xbe, 0xf0, 0x02, 0xc1, 0xf1, 0xa8, 0x83, 0x4c, 0xdd, 0x35, 0x05,
	0x6e, 0x38, 0x75, 0xd7, 0x14, 0x59, 0x52, 0x72, 0x85, 0x52, 0x5d, 0x20, 0x6b, 0x99, 0x54, 0x7c,
	0x9f, 0x08, 0xb1, 0xa2, 0x2e, 0x2c, 0x15, 0x4b, 0x60, 0xfc, 0x52, 0xb1, 0x44, 0xb6, 0x6e, 0x44,
	0x2c, 0xbe, 0x6f, 0xfc, 0x88, 0x60, 0x2e, 0xe9, 0x56, 0xb0, 0xbc, 0x3f, 0xf3, 0x24, 0x29, 0x23,
	0xc7, 0x73, 0x44, 0x85, 0x22, 0x5e, 0x22, 0xeb, 0xd9, 0xf3, 0xd9, 0xdf, 0x47, 0x7e, 0x41, 0xb0,
	0x24, 0x76, 0x14, 0x38, 0xdd, 0xe9, 0x65, 0x98, 0x20, 0x69, 0x73, 0x9f, 0xad, 0x38, 0xf8, 0x26,
	0x05, 0x57, 0xf0, 0xc6, 0x10, 0x70, 0x53, 0xdf, 0x8d, 0x34, 0xbf, 0xf5, 0x15, 0x82, 0x25, 0xdd,
	0x69, 0xd1, 0x9c, 0x7b, 0x81, 0x1d, 0x49, 0xf8, 0x3e, 0xfa, 0xf8, 0x46, 0xc3, 0xf2, 0x77, 0x82,
	0x7a, 0x58, 0xa8, 0xf0, 0x80, 0xee, 0xe7, 0x46, 0xc3, 0xd9, 0xf0, 0x8c, 0x5d, 0xa5, 0xff, 0xef,
	0xc8, 0x4d, 0xfe, 0xf5, 0x5f, 0x84, 0x5e, 0x4e, 0x2d, 0xdf, 0x0e, 0xc7, 0x70, 0x9b, 0xa1, 0xc8,
	0x35, 0xde, 0xe9, 0x76, 0xe5, 0x37, 0x56, 0xf3, 0x80, 0xd7, 0x3c, 0xe0, 0x35, 0x0f, 0xb6, 0x2b,
	0xf5, 0x59, 0xfa, 0xc7, 0xc9, 0xf5, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x27, 0xb5, 0x4e, 0x0b,
	0xb2, 0x19, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VpcClient is the client API for Vpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VpcClient interface {
	// 获取vpc列表
	ListVpc(ctx context.Context, in *ListVpcRequest, opts ...grpc.CallOption) (*ListVpcResponse, error)
	// 根据uuid获取vpc
	GetVpcByUuid(ctx context.Context, in *GetVpcByUuidRequest, opts ...grpc.CallOption) (*GetVpcByUuidResponse, error)
	// 获取vpc数量
	GetVpcTotalCnt(ctx context.Context, in *GetVpcTotalCntRequest, opts ...grpc.CallOption) (*GetVpcTotalCntResponse, error)
	// 创建vpc
	CreateVpc(ctx context.Context, in *CreateVpcRequest, opts ...grpc.CallOption) (*CreateVpcResponse, error)
	// 删除vpc
	DeleteVpc(ctx context.Context, in *DeleteVpcRequest, opts ...grpc.CallOption) (*DeleteVpcResponse, error)
	// 改名vpc
	ChangeVpcName(ctx context.Context, in *ChangeVpcNameRequest, opts ...grpc.CallOption) (*ChangeVpcNameResponse, error)
	// 获取可用网段
	ListVpcAvailableCidr(ctx context.Context, in *ListVpcAvailableCidrRequest, opts ...grpc.CallOption) (*ListVpcAvailableCidrResponse, error)
	// 获取subnet列表
	ListSubnet(ctx context.Context, in *ListSubnetRequest, opts ...grpc.CallOption) (*ListSubnetResponse, error)
	// 根据uuid获取subnet
	GetSubnetByUuid(ctx context.Context, in *GetSubnetByUuidRequest, opts ...grpc.CallOption) (*GetSubnetByUuidResponse, error)
	// 获取subnet数量
	GetSubnetTotalCnt(ctx context.Context, in *GetSubnetTotalCntRequest, opts ...grpc.CallOption) (*GetSubnetTotalCntResponse, error)
	// 创建subnet
	CreateSubnet(ctx context.Context, in *CreateSubnetRequest, opts ...grpc.CallOption) (*CreateSubnetResponse, error)
	// 删除subnet
	DeleteSubnet(ctx context.Context, in *DeleteSubnetRequest, opts ...grpc.CallOption) (*DeleteSubnetResponse, error)
	// 改名subnet
	ChangeSubnetName(ctx context.Context, in *ChangeSubnetNameRequest, opts ...grpc.CallOption) (*ChangeSubnetNameResponse, error)
	// 检查subnet所在vpc内子网网段是否有重叠
	CheckSubnetCidrOverlap(ctx context.Context, in *CheckSubnetCidrOverlapRequest, opts ...grpc.CallOption) (*CheckSubnetCidrOverlapResponse, error)
}

type vpcClient struct {
	cc grpc.ClientConnInterface
}

func NewVpcClient(cc grpc.ClientConnInterface) VpcClient {
	return &vpcClient{cc}
}

func (c *vpcClient) ListVpc(ctx context.Context, in *ListVpcRequest, opts ...grpc.CallOption) (*ListVpcResponse, error) {
	out := new(ListVpcResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/ListVpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) GetVpcByUuid(ctx context.Context, in *GetVpcByUuidRequest, opts ...grpc.CallOption) (*GetVpcByUuidResponse, error) {
	out := new(GetVpcByUuidResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/GetVpcByUuid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) GetVpcTotalCnt(ctx context.Context, in *GetVpcTotalCntRequest, opts ...grpc.CallOption) (*GetVpcTotalCntResponse, error) {
	out := new(GetVpcTotalCntResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/GetVpcTotalCnt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) CreateVpc(ctx context.Context, in *CreateVpcRequest, opts ...grpc.CallOption) (*CreateVpcResponse, error) {
	out := new(CreateVpcResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/CreateVpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) DeleteVpc(ctx context.Context, in *DeleteVpcRequest, opts ...grpc.CallOption) (*DeleteVpcResponse, error) {
	out := new(DeleteVpcResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/DeleteVpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) ChangeVpcName(ctx context.Context, in *ChangeVpcNameRequest, opts ...grpc.CallOption) (*ChangeVpcNameResponse, error) {
	out := new(ChangeVpcNameResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/ChangeVpcName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) ListVpcAvailableCidr(ctx context.Context, in *ListVpcAvailableCidrRequest, opts ...grpc.CallOption) (*ListVpcAvailableCidrResponse, error) {
	out := new(ListVpcAvailableCidrResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/ListVpcAvailableCidr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) ListSubnet(ctx context.Context, in *ListSubnetRequest, opts ...grpc.CallOption) (*ListSubnetResponse, error) {
	out := new(ListSubnetResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/ListSubnet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) GetSubnetByUuid(ctx context.Context, in *GetSubnetByUuidRequest, opts ...grpc.CallOption) (*GetSubnetByUuidResponse, error) {
	out := new(GetSubnetByUuidResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/GetSubnetByUuid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) GetSubnetTotalCnt(ctx context.Context, in *GetSubnetTotalCntRequest, opts ...grpc.CallOption) (*GetSubnetTotalCntResponse, error) {
	out := new(GetSubnetTotalCntResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/GetSubnetTotalCnt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) CreateSubnet(ctx context.Context, in *CreateSubnetRequest, opts ...grpc.CallOption) (*CreateSubnetResponse, error) {
	out := new(CreateSubnetResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/CreateSubnet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) DeleteSubnet(ctx context.Context, in *DeleteSubnetRequest, opts ...grpc.CallOption) (*DeleteSubnetResponse, error) {
	out := new(DeleteSubnetResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/DeleteSubnet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) ChangeSubnetName(ctx context.Context, in *ChangeSubnetNameRequest, opts ...grpc.CallOption) (*ChangeSubnetNameResponse, error) {
	out := new(ChangeSubnetNameResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/ChangeSubnetName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vpcClient) CheckSubnetCidrOverlap(ctx context.Context, in *CheckSubnetCidrOverlapRequest, opts ...grpc.CallOption) (*CheckSubnetCidrOverlapResponse, error) {
	out := new(CheckSubnetCidrOverlapResponse)
	err := c.cc.Invoke(ctx, "/didi.cloud.compute.v1.Vpc/CheckSubnetCidrOverlap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VpcServer is the server API for Vpc service.
type VpcServer interface {
	// 获取vpc列表
	ListVpc(context.Context, *ListVpcRequest) (*ListVpcResponse, error)
	// 根据uuid获取vpc
	GetVpcByUuid(context.Context, *GetVpcByUuidRequest) (*GetVpcByUuidResponse, error)
	// 获取vpc数量
	GetVpcTotalCnt(context.Context, *GetVpcTotalCntRequest) (*GetVpcTotalCntResponse, error)
	// 创建vpc
	CreateVpc(context.Context, *CreateVpcRequest) (*CreateVpcResponse, error)
	// 删除vpc
	DeleteVpc(context.Context, *DeleteVpcRequest) (*DeleteVpcResponse, error)
	// 改名vpc
	ChangeVpcName(context.Context, *ChangeVpcNameRequest) (*ChangeVpcNameResponse, error)
	// 获取可用网段
	ListVpcAvailableCidr(context.Context, *ListVpcAvailableCidrRequest) (*ListVpcAvailableCidrResponse, error)
	// 获取subnet列表
	ListSubnet(context.Context, *ListSubnetRequest) (*ListSubnetResponse, error)
	// 根据uuid获取subnet
	GetSubnetByUuid(context.Context, *GetSubnetByUuidRequest) (*GetSubnetByUuidResponse, error)
	// 获取subnet数量
	GetSubnetTotalCnt(context.Context, *GetSubnetTotalCntRequest) (*GetSubnetTotalCntResponse, error)
	// 创建subnet
	CreateSubnet(context.Context, *CreateSubnetRequest) (*CreateSubnetResponse, error)
	// 删除subnet
	DeleteSubnet(context.Context, *DeleteSubnetRequest) (*DeleteSubnetResponse, error)
	// 改名subnet
	ChangeSubnetName(context.Context, *ChangeSubnetNameRequest) (*ChangeSubnetNameResponse, error)
	// 检查subnet所在vpc内子网网段是否有重叠
	CheckSubnetCidrOverlap(context.Context, *CheckSubnetCidrOverlapRequest) (*CheckSubnetCidrOverlapResponse, error)
}

// UnimplementedVpcServer can be embedded to have forward compatible implementations.
type UnimplementedVpcServer struct {
}

func (*UnimplementedVpcServer) ListVpc(ctx context.Context, req *ListVpcRequest) (*ListVpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVpc not implemented")
}
func (*UnimplementedVpcServer) GetVpcByUuid(ctx context.Context, req *GetVpcByUuidRequest) (*GetVpcByUuidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVpcByUuid not implemented")
}
func (*UnimplementedVpcServer) GetVpcTotalCnt(ctx context.Context, req *GetVpcTotalCntRequest) (*GetVpcTotalCntResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVpcTotalCnt not implemented")
}
func (*UnimplementedVpcServer) CreateVpc(ctx context.Context, req *CreateVpcRequest) (*CreateVpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVpc not implemented")
}
func (*UnimplementedVpcServer) DeleteVpc(ctx context.Context, req *DeleteVpcRequest) (*DeleteVpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVpc not implemented")
}
func (*UnimplementedVpcServer) ChangeVpcName(ctx context.Context, req *ChangeVpcNameRequest) (*ChangeVpcNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeVpcName not implemented")
}
func (*UnimplementedVpcServer) ListVpcAvailableCidr(ctx context.Context, req *ListVpcAvailableCidrRequest) (*ListVpcAvailableCidrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVpcAvailableCidr not implemented")
}
func (*UnimplementedVpcServer) ListSubnet(ctx context.Context, req *ListSubnetRequest) (*ListSubnetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSubnet not implemented")
}
func (*UnimplementedVpcServer) GetSubnetByUuid(ctx context.Context, req *GetSubnetByUuidRequest) (*GetSubnetByUuidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubnetByUuid not implemented")
}
func (*UnimplementedVpcServer) GetSubnetTotalCnt(ctx context.Context, req *GetSubnetTotalCntRequest) (*GetSubnetTotalCntResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubnetTotalCnt not implemented")
}
func (*UnimplementedVpcServer) CreateSubnet(ctx context.Context, req *CreateSubnetRequest) (*CreateSubnetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubnet not implemented")
}
func (*UnimplementedVpcServer) DeleteSubnet(ctx context.Context, req *DeleteSubnetRequest) (*DeleteSubnetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubnet not implemented")
}
func (*UnimplementedVpcServer) ChangeSubnetName(ctx context.Context, req *ChangeSubnetNameRequest) (*ChangeSubnetNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeSubnetName not implemented")
}
func (*UnimplementedVpcServer) CheckSubnetCidrOverlap(ctx context.Context, req *CheckSubnetCidrOverlapRequest) (*CheckSubnetCidrOverlapResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckSubnetCidrOverlap not implemented")
}

func RegisterVpcServer(s *grpc.Server, srv VpcServer) {
	s.RegisterService(&_Vpc_serviceDesc, srv)
}

func _Vpc_ListVpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).ListVpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/ListVpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).ListVpc(ctx, req.(*ListVpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_GetVpcByUuid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVpcByUuidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).GetVpcByUuid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/GetVpcByUuid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).GetVpcByUuid(ctx, req.(*GetVpcByUuidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_GetVpcTotalCnt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVpcTotalCntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).GetVpcTotalCnt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/GetVpcTotalCnt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).GetVpcTotalCnt(ctx, req.(*GetVpcTotalCntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_CreateVpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).CreateVpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/CreateVpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).CreateVpc(ctx, req.(*CreateVpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_DeleteVpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).DeleteVpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/DeleteVpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).DeleteVpc(ctx, req.(*DeleteVpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_ChangeVpcName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeVpcNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).ChangeVpcName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/ChangeVpcName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).ChangeVpcName(ctx, req.(*ChangeVpcNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_ListVpcAvailableCidr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVpcAvailableCidrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).ListVpcAvailableCidr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/ListVpcAvailableCidr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).ListVpcAvailableCidr(ctx, req.(*ListVpcAvailableCidrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_ListSubnet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSubnetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).ListSubnet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/ListSubnet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).ListSubnet(ctx, req.(*ListSubnetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_GetSubnetByUuid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubnetByUuidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).GetSubnetByUuid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/GetSubnetByUuid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).GetSubnetByUuid(ctx, req.(*GetSubnetByUuidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_GetSubnetTotalCnt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubnetTotalCntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).GetSubnetTotalCnt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/GetSubnetTotalCnt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).GetSubnetTotalCnt(ctx, req.(*GetSubnetTotalCntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_CreateSubnet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubnetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).CreateSubnet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/CreateSubnet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).CreateSubnet(ctx, req.(*CreateSubnetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_DeleteSubnet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubnetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).DeleteSubnet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/DeleteSubnet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).DeleteSubnet(ctx, req.(*DeleteSubnetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_ChangeSubnetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeSubnetNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).ChangeSubnetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/ChangeSubnetName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).ChangeSubnetName(ctx, req.(*ChangeSubnetNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vpc_CheckSubnetCidrOverlap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckSubnetCidrOverlapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VpcServer).CheckSubnetCidrOverlap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/didi.cloud.compute.v1.Vpc/CheckSubnetCidrOverlap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VpcServer).CheckSubnetCidrOverlap(ctx, req.(*CheckSubnetCidrOverlapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Vpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "didi.cloud.compute.v1.Vpc",
	HandlerType: (*VpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListVpc",
			Handler:    _Vpc_ListVpc_Handler,
		},
		{
			MethodName: "GetVpcByUuid",
			Handler:    _Vpc_GetVpcByUuid_Handler,
		},
		{
			MethodName: "GetVpcTotalCnt",
			Handler:    _Vpc_GetVpcTotalCnt_Handler,
		},
		{
			MethodName: "CreateVpc",
			Handler:    _Vpc_CreateVpc_Handler,
		},
		{
			MethodName: "DeleteVpc",
			Handler:    _Vpc_DeleteVpc_Handler,
		},
		{
			MethodName: "ChangeVpcName",
			Handler:    _Vpc_ChangeVpcName_Handler,
		},
		{
			MethodName: "ListVpcAvailableCidr",
			Handler:    _Vpc_ListVpcAvailableCidr_Handler,
		},
		{
			MethodName: "ListSubnet",
			Handler:    _Vpc_ListSubnet_Handler,
		},
		{
			MethodName: "GetSubnetByUuid",
			Handler:    _Vpc_GetSubnetByUuid_Handler,
		},
		{
			MethodName: "GetSubnetTotalCnt",
			Handler:    _Vpc_GetSubnetTotalCnt_Handler,
		},
		{
			MethodName: "CreateSubnet",
			Handler:    _Vpc_CreateSubnet_Handler,
		},
		{
			MethodName: "DeleteSubnet",
			Handler:    _Vpc_DeleteSubnet_Handler,
		},
		{
			MethodName: "ChangeSubnetName",
			Handler:    _Vpc_ChangeSubnetName_Handler,
		},
		{
			MethodName: "CheckSubnetCidrOverlap",
			Handler:    _Vpc_CheckSubnetCidrOverlap_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "compute/v1/vpc.proto",
}
